{"ast":null,"code":"var _jsxFileName = \"/Users/hanle/PhatThinhVina/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeliveryOptimizer() {\n  _s();\n  // Step control (1: input count, 2: select customers, 3: truck & weight, 4: review & submit)\n  const [step, setStep] = useState(1);\n\n  // Step 1: Daily customer count input.\n  const [dailyCustomerCount, setDailyCustomerCount] = useState(0);\n\n  // Step 2: Customer selection\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n\n  // Step 3: Truck and product details\n  const [numTrucks, setNumTrucks] = useState(0);\n  const [productWeight, setProductWeight] = useState(0);\n\n  // Final optimized route response from backend.\n  const [optimizationResult, setOptimizationResult] = useState(null);\n\n  // Sample customer data (in a real app, fetch from backend)\n  useEffect(() => {\n    const sampleCustomers = [{\n      id: 1,\n      name: 'Alice Johnson',\n      address: '123 Main St, Cityville',\n      location: [4, 4]\n    }, {\n      id: 2,\n      name: 'Bob Smith',\n      address: '456 Oak Ave, Townsville',\n      location: [2, 0]\n    }, {\n      id: 3,\n      name: 'Charlie Brown',\n      address: '789 Pine Rd, Villageton',\n      location: [8, 0]\n    }, {\n      id: 4,\n      name: 'Diana Prince',\n      address: '101 Maple St, Metropolis',\n      location: [0, 1]\n    }, {\n      id: 5,\n      name: 'Ethan Hunt',\n      address: '202 Birch Blvd, Springfield',\n      location: [1, 8]\n    }, {\n      id: 6,\n      name: 'Fiona Gallagher',\n      address: '303 Cedar Dr, Riverdale',\n      location: [5, 8]\n    }, {\n      id: 7,\n      name: 'George Bailey',\n      address: '404 Elm St, Bedford Falls',\n      location: [7, 8]\n    }\n    // Add additional customers as needed.\n    ];\n    setCustomers(sampleCustomers);\n  }, []);\n\n  // Handler for changing selection for customers.\n  const handleCustomerToggle = customerId => {\n    setSelectedCustomerIds(prevSelected => prevSelected.includes(customerId) ? prevSelected.filter(id => id !== customerId) : [...prevSelected, customerId]);\n  };\n\n  // Handler to submit the complete form.\n  const handleSubmit = async () => {\n    // Build the payload that the backend expects.\n    // For instance, here we're using the location coordinates for selected customers.\n    const selectedCustomers = customers.filter(c => selectedCustomerIds.includes(c.id));\n    const locations = selectedCustomers.map(c => c.location);\n\n    // You can add more detail to the payload as needed.\n    const payload = {\n      // Assuming the backend expects these keys:\n      locations: locations,\n      num_vehicles: numTrucks,\n      // Trucks count might correspond to vehicles.\n      depot: 0,\n      // Depending on the logic, you can consider the first location as depot.\n      daily_customers: dailyCustomerCount,\n      total_weight: productWeight // Product weight to help determine truck size.\n    };\n    const appUrl = ProcessingInstruction.env.REACT_APP_URL;\n    try {\n      const response = await fetch(\"appUrl\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const jsonData = await response.json();\n      setOptimizationResult(jsonData);\n      setStep(4);\n    } catch (error) {\n      console.error(\"Error optimizing routes:\", error);\n    }\n  };\n\n  // Render different views based on the current step.\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Step 1: Enter Today's Customer Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: dailyCustomerCount,\n            onChange: e => setDailyCustomerCount(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStep(2),\n            children: \"Next: Select Customers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Step 2: Select Customers for Delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total customers for today: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: dailyCustomerCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px',\n              overflowY: 'auto',\n              border: '1px solid #ccc',\n              padding: '10px',\n              marginBottom: '20px'\n            },\n            children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => handleCustomerToggle(customer.id),\n              style: {\n                padding: '8px',\n                marginBottom: '4px',\n                cursor: 'pointer',\n                borderRadius: '4px',\n                backgroundColor: selectedCustomerIds.includes(customer.id) ? '#e0e0e0' : 'transparent'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: customer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: customer.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, customer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStep(3),\n            children: \"Next: Truck & Product Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Step 3: Enter Truck & Product Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Number of Trucks Needed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: numTrucks,\n                onChange: e => setNumTrucks(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Product Weight (kg):\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: productWeight,\n                onChange: e => setProductWeight(Number(e.target.value))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit for Optimized Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Optimization Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), optimizationResult ? /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              whiteSpace: 'pre-wrap',\n              textAlign: 'left'\n            },\n            children: JSON.stringify(optimizationResult, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No result received.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setStep(1),\n            children: \"Start Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Delivery Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), renderStep()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(DeliveryOptimizer, \"LT6kxYxKuKP3/4TeZg68d90akPw=\");\n_c = DeliveryOptimizer;\nexport default DeliveryOptimizer;\nvar _c;\n$RefreshReg$(_c, \"DeliveryOptimizer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DeliveryOptimizer","_s","step","setStep","dailyCustomerCount","setDailyCustomerCount","customers","setCustomers","selectedCustomerIds","setSelectedCustomerIds","numTrucks","setNumTrucks","productWeight","setProductWeight","optimizationResult","setOptimizationResult","sampleCustomers","id","name","address","location","handleCustomerToggle","customerId","prevSelected","includes","filter","handleSubmit","selectedCustomers","c","locations","map","payload","num_vehicles","depot","daily_customers","total_weight","appUrl","ProcessingInstruction","env","REACT_APP_URL","response","fetch","method","headers","body","JSON","stringify","jsonData","json","error","console","renderStep","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","value","onChange","e","Number","target","onClick","style","height","overflowY","border","padding","marginBottom","customer","cursor","borderRadius","backgroundColor","whiteSpace","textAlign","_c","$RefreshReg$"],"sources":["/Users/hanle/PhatThinhVina/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DeliveryOptimizer() {\n  // Step control (1: input count, 2: select customers, 3: truck & weight, 4: review & submit)\n  const [step, setStep] = useState(1);\n\n  // Step 1: Daily customer count input.\n  const [dailyCustomerCount, setDailyCustomerCount] = useState(0);\n\n  // Step 2: Customer selection\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n\n  // Step 3: Truck and product details\n  const [numTrucks, setNumTrucks] = useState(0);\n  const [productWeight, setProductWeight] = useState(0);\n\n  // Final optimized route response from backend.\n  const [optimizationResult, setOptimizationResult] = useState(null);\n\n  // Sample customer data (in a real app, fetch from backend)\n  useEffect(() => {\n    const sampleCustomers = [\n      { id: 1, name: 'Alice Johnson', address: '123 Main St, Cityville', location: [4, 4] },\n      { id: 2, name: 'Bob Smith', address: '456 Oak Ave, Townsville', location: [2, 0] },\n      { id: 3, name: 'Charlie Brown', address: '789 Pine Rd, Villageton', location: [8, 0] },\n      { id: 4, name: 'Diana Prince', address: '101 Maple St, Metropolis', location: [0, 1] },\n      { id: 5, name: 'Ethan Hunt', address: '202 Birch Blvd, Springfield', location: [1, 8] },\n      { id: 6, name: 'Fiona Gallagher', address: '303 Cedar Dr, Riverdale', location: [5, 8] },\n      { id: 7, name: 'George Bailey', address: '404 Elm St, Bedford Falls', location: [7, 8] },\n      // Add additional customers as needed.\n    ];\n    setCustomers(sampleCustomers);\n  }, []);\n\n  // Handler for changing selection for customers.\n  const handleCustomerToggle = (customerId) => {\n    setSelectedCustomerIds((prevSelected) =>\n      prevSelected.includes(customerId)\n        ? prevSelected.filter((id) => id !== customerId)\n        : [...prevSelected, customerId]\n    );\n  };\n\n  // Handler to submit the complete form.\n  const handleSubmit = async () => {\n    // Build the payload that the backend expects.\n    // For instance, here we're using the location coordinates for selected customers.\n    const selectedCustomers = customers.filter((c) => selectedCustomerIds.includes(c.id));\n    const locations = selectedCustomers.map((c) => c.location);\n    \n    // You can add more detail to the payload as needed.\n    const payload = {\n      // Assuming the backend expects these keys:\n      locations: locations,\n      num_vehicles: numTrucks,     // Trucks count might correspond to vehicles.\n      depot: 0,                    // Depending on the logic, you can consider the first location as depot.\n      daily_customers: dailyCustomerCount,\n      total_weight: productWeight, // Product weight to help determine truck size.\n    };\n\n    const appUrl = ProcessingInstruction.env.REACT_APP_URL;\n\n    try {\n      const response = await fetch(\"appUrl\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n      const jsonData = await response.json();\n      setOptimizationResult(jsonData);\n      setStep(4);\n    } catch (error) {\n      console.error(\"Error optimizing routes:\", error);\n    }\n  };\n\n  // Render different views based on the current step.\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <div>\n            <h2>Step 1: Enter Today's Customer Count</h2>\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={dailyCustomerCount}\n              onChange={(e) => setDailyCustomerCount(Number(e.target.value))}\n            />\n            <br />\n            <button onClick={() => setStep(2)}>Next: Select Customers</button>\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <h2>Step 2: Select Customers for Delivery</h2>\n            <p>\n              Total customers for today: <strong>{dailyCustomerCount}</strong>\n            </p>\n            <div\n              style={{\n                height: '300px',\n                overflowY: 'auto',\n                border: '1px solid #ccc',\n                padding: '10px',\n                marginBottom: '20px',\n              }}\n            >\n              {customers.map((customer) => (\n                <div\n                  key={customer.id}\n                  onClick={() => handleCustomerToggle(customer.id)}\n                  style={{\n                    padding: '8px',\n                    marginBottom: '4px',\n                    cursor: 'pointer',\n                    borderRadius: '4px',\n                    backgroundColor: selectedCustomerIds.includes(customer.id)\n                      ? '#e0e0e0'\n                      : 'transparent',\n                  }}\n                >\n                  <strong>{customer.name}</strong>\n                  <br />\n                  <small>{customer.address}</small>\n                </div>\n              ))}\n            </div>\n            <button onClick={() => setStep(3)}>Next: Truck & Product Details</button>\n          </div>\n        );\n      case 3:\n        return (\n          <div>\n            <h2>Step 3: Enter Truck & Product Details</h2>\n            <div>\n              <label>\n                Number of Trucks Needed:\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  value={numTrucks}\n                  onChange={(e) => setNumTrucks(Number(e.target.value))}\n                />\n              </label>\n            </div>\n            <div>\n              <label>\n                Product Weight (kg):\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  value={productWeight}\n                  onChange={(e) => setProductWeight(Number(e.target.value))}\n                />\n              </label>\n            </div>\n            <br />\n            <button onClick={handleSubmit}>Submit for Optimized Route</button>\n          </div>\n        );\n      case 4:\n        return (\n          <div>\n            <h2>Optimization Result</h2>\n            {optimizationResult ? (\n              <pre style={{ whiteSpace: 'pre-wrap', textAlign: 'left' }}>\n                {JSON.stringify(optimizationResult, null, 2)}\n              </pre>\n            ) : (\n              <p>No result received.</p>\n            )}\n            <button onClick={() => setStep(1)}>Start Over</button>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Delivery Optimizer</h1>\n      {renderStep()}\n    </div>\n  );\n}\n\nexport default DeliveryOptimizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}