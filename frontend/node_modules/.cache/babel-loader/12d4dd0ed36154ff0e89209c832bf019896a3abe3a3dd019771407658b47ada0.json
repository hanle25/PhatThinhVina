{"ast":null,"code":"var _jsxFileName = \"/Users/hanle/PhatThinhVina/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/DeliveryOptimizerSinglePage.js\nimport React, { useState, useEffect } from 'react';\nimport MapDisplay from './MapDisplay';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeliveryOptimizerSinglePage() {\n  _s();\n  // State for daily customer count.\n  const [dailyCustomerCount, setDailyCustomerCount] = useState(0);\n\n  // Customer-related state.\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Truck & product details.\n  const [numTrucks, setNumTrucks] = useState(0);\n  const [productWeight, setProductWeight] = useState(0);\n\n  // Storage options and selected storage.\n  const [storages, setStorages] = useState([]);\n  const [selectedStorageId, setSelectedStorageId] = useState(null);\n\n  // Optimization result.\n  const [optimizationResult, setOptimizationResult] = useState(null);\n\n  // Load sample customers data; in a real-world scenario, load this via an API call.\n  useEffect(() => {\n    const sampleCustomers = [{\n      id: 1,\n      name: 'Alice Johnson',\n      address: '123 Main St, Cityville',\n      location: [4, 4]\n    }, {\n      id: 2,\n      name: 'Bob Smith',\n      address: '456 Oak Ave, Townsville',\n      location: [2, 0]\n    }, {\n      id: 3,\n      name: 'Charlie Brown',\n      address: '789 Pine Rd, Villageton',\n      location: [8, 0]\n    }, {\n      id: 4,\n      name: 'Diana Prince',\n      address: '101 Maple St, Metropolis',\n      location: [0, 1]\n    }, {\n      id: 5,\n      name: 'Ethan Hunt',\n      address: '202 Birch Blvd, Springfield',\n      location: [1, 8]\n    }, {\n      id: 6,\n      name: 'Fiona Gallagher',\n      address: '303 Cedar Dr, Riverdale',\n      location: [5, 8]\n    }, {\n      id: 7,\n      name: 'George Bailey',\n      address: '404 Elm St, Bedford Falls',\n      location: [7, 8]\n    }\n    // ... add more sample customers as needed.\n    ];\n    setCustomers(sampleCustomers);\n  }, []);\n\n  // Load storage options.\n  useEffect(() => {\n    const sampleStorages = [{\n      id: 1,\n      name: 'Storage A',\n      address: '500 Warehouse Rd, Depot City',\n      location: [3, 3]\n    }, {\n      id: 2,\n      name: 'Storage B',\n      address: '800 Distribution Ave, Logistic Town',\n      location: [6, 6]\n    }];\n    setStorages(sampleStorages);\n    if (sampleStorages.length > 0) {\n      setSelectedStorageId(sampleStorages[0].id);\n    }\n  }, []);\n\n  // Toggle customer selection.\n  const handleCustomerToggle = customerId => {\n    setSelectedCustomerIds(prevSelected => prevSelected.includes(customerId) ? prevSelected.filter(id => id !== customerId) : [...prevSelected, customerId]);\n  };\n\n  // Filter customers based on the search term.\n  const filteredCustomers = customers.filter(customer => customer.name.toLowerCase().includes(searchTerm.toLowerCase()) || customer.address.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Handler to submit the form.\n  const handleSubmit = async () => {\n    const selectedCustomers = customers.filter(c => selectedCustomerIds.includes(c.id));\n    const customerLocations = selectedCustomers.map(c => c.location);\n    const selectedStorage = storages.find(s => s.id === selectedStorageId);\n\n    // Build payload.\n    const payload = {\n      locations: customerLocations,\n      // List of customer coordinates.\n      num_vehicles: numTrucks,\n      // Number of trucks available.\n      depot: selectedStorage ? selectedStorage.location : null,\n      // Chosen storage/depot location.\n      storage_address: selectedStorage ? selectedStorage.address : '',\n      daily_customers: dailyCustomerCount,\n      total_weight: productWeight\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/optimize\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const jsonData = await response.json();\n      setOptimizationResult(jsonData);\n    } catch (error) {\n      console.error(\"Error optimizing routes:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Delivery Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Daily Customer Count:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          value: dailyCustomerCount,\n          onChange: e => setDailyCustomerCount(Number(e.target.value)),\n          className: \"number-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStorageId || '',\n        onChange: e => setSelectedStorageId(Number(e.target.value)),\n        className: \"select-input\",\n        children: storages.map(storage => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: storage.id,\n          children: [storage.name, \" - \", storage.address]\n        }, storage.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Customers for Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search customers...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-list\",\n        children: [filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCustomerToggle(customer.id),\n          className: `customer-item ${selectedCustomerIds.includes(customer.id) ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)), filteredCustomers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No customers match your search criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Truck & Product Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number of Trucks Needed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: numTrucks,\n            onChange: e => setNumTrucks(Number(e.target.value)),\n            className: \"number-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Product Weight (kg):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: productWeight,\n            onChange: e => setProductWeight(Number(e.target.value)),\n            className: \"number-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"Submit for Optimized Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), optimizationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Optimization Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"result-output\",\n        children: JSON.stringify(optimizationResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), optimizationResult.routes && optimizationResult.routes.length > 0 &&\n      // Assuming the first route contains the route coordinates.\n      optimizationResult.routes[0].route && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Optimized Route on Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MapDisplay, {\n          routeData: optimizationResult.routes[0].route\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(DeliveryOptimizerSinglePage, \"AqNCazO0/S+1/7hpX9Gz8JhBqSw=\");\n_c = DeliveryOptimizerSinglePage;\nexport default DeliveryOptimizerSinglePage;\nvar _c;\n$RefreshReg$(_c, \"DeliveryOptimizerSinglePage\");","map":{"version":3,"names":["React","useState","useEffect","MapDisplay","jsxDEV","_jsxDEV","DeliveryOptimizerSinglePage","_s","dailyCustomerCount","setDailyCustomerCount","customers","setCustomers","selectedCustomerIds","setSelectedCustomerIds","searchTerm","setSearchTerm","numTrucks","setNumTrucks","productWeight","setProductWeight","storages","setStorages","selectedStorageId","setSelectedStorageId","optimizationResult","setOptimizationResult","sampleCustomers","id","name","address","location","sampleStorages","length","handleCustomerToggle","customerId","prevSelected","includes","filter","filteredCustomers","customer","toLowerCase","handleSubmit","selectedCustomers","c","customerLocations","map","selectedStorage","find","s","payload","locations","num_vehicles","depot","storage_address","daily_customers","total_weight","response","fetch","method","headers","body","JSON","stringify","jsonData","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","value","onChange","e","Number","target","storage","placeholder","onClick","routes","route","routeData","_c","$RefreshReg$"],"sources":["/Users/hanle/PhatThinhVina/frontend/src/App.js"],"sourcesContent":["// src/DeliveryOptimizerSinglePage.js\nimport React, { useState, useEffect } from 'react';\nimport MapDisplay from './MapDisplay';\nimport './App.css';\n\nfunction DeliveryOptimizerSinglePage() {\n  // State for daily customer count.\n  const [dailyCustomerCount, setDailyCustomerCount] = useState(0);\n\n  // Customer-related state.\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Truck & product details.\n  const [numTrucks, setNumTrucks] = useState(0);\n  const [productWeight, setProductWeight] = useState(0);\n\n  // Storage options and selected storage.\n  const [storages, setStorages] = useState([]);\n  const [selectedStorageId, setSelectedStorageId] = useState(null);\n\n  // Optimization result.\n  const [optimizationResult, setOptimizationResult] = useState(null);\n\n  // Load sample customers data; in a real-world scenario, load this via an API call.\n  useEffect(() => {\n    const sampleCustomers = [\n      { id: 1, name: 'Alice Johnson', address: '123 Main St, Cityville', location: [4, 4] },\n      { id: 2, name: 'Bob Smith', address: '456 Oak Ave, Townsville', location: [2, 0] },\n      { id: 3, name: 'Charlie Brown', address: '789 Pine Rd, Villageton', location: [8, 0] },\n      { id: 4, name: 'Diana Prince', address: '101 Maple St, Metropolis', location: [0, 1] },\n      { id: 5, name: 'Ethan Hunt', address: '202 Birch Blvd, Springfield', location: [1, 8] },\n      { id: 6, name: 'Fiona Gallagher', address: '303 Cedar Dr, Riverdale', location: [5, 8] },\n      { id: 7, name: 'George Bailey', address: '404 Elm St, Bedford Falls', location: [7, 8] },\n      // ... add more sample customers as needed.\n    ]; \n    setCustomers(sampleCustomers);\n  }, []);\n\n  // Load storage options.\n  useEffect(() => {\n    const sampleStorages = [\n      { id: 1, name: 'Storage A', address: '500 Warehouse Rd, Depot City', location: [3, 3] },\n      { id: 2, name: 'Storage B', address: '800 Distribution Ave, Logistic Town', location: [6, 6] },\n    ];\n    setStorages(sampleStorages);\n    if (sampleStorages.length > 0) {\n      setSelectedStorageId(sampleStorages[0].id);\n    }\n  }, []);\n\n  // Toggle customer selection.\n  const handleCustomerToggle = (customerId) => {\n    setSelectedCustomerIds((prevSelected) =>\n      prevSelected.includes(customerId)\n        ? prevSelected.filter((id) => id !== customerId)\n        : [...prevSelected, customerId]\n    );\n  };\n\n  // Filter customers based on the search term.\n  const filteredCustomers = customers.filter(\n    (customer) =>\n      customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      customer.address.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Handler to submit the form.\n  const handleSubmit = async () => {\n    const selectedCustomers = customers.filter((c) =>\n      selectedCustomerIds.includes(c.id)\n    );\n    const customerLocations = selectedCustomers.map((c) => c.location);\n    const selectedStorage = storages.find(s => s.id === selectedStorageId);\n\n    // Build payload.\n    const payload = {\n      locations: customerLocations,                   // List of customer coordinates.\n      num_vehicles: numTrucks,                         // Number of trucks available.\n      depot: selectedStorage ? selectedStorage.location : null, // Chosen storage/depot location.\n      storage_address: selectedStorage ? selectedStorage.address : '',\n      daily_customers: dailyCustomerCount,\n      total_weight: productWeight,\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/optimize\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n      const jsonData = await response.json();\n      setOptimizationResult(jsonData);\n    } catch (error) {\n      console.error(\"Error optimizing routes:\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Delivery Optimizer</h1>\n      \n      {/* Daily Customer Count */}\n      <div className=\"input-group\">\n        <label>\n          <strong>Daily Customer Count:</strong>\n          <input\n            type=\"number\"\n            min=\"0\"\n            value={dailyCustomerCount}\n            onChange={(e) => setDailyCustomerCount(Number(e.target.value))}\n            className=\"number-input\"\n          />\n        </label>\n      </div>\n      \n      {/* Storage Selection */}\n      <div className=\"input-group\">\n        <h2>Select Storage</h2>\n        <select\n          value={selectedStorageId || ''}\n          onChange={(e) => setSelectedStorageId(Number(e.target.value))}\n          className=\"select-input\"\n        >\n          {storages.map(storage => (\n            <option key={storage.id} value={storage.id}>\n              {storage.name} - {storage.address}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      {/* Customer Search & Selection */}\n      <div className=\"input-group\">\n        <h2>Select Customers for Delivery</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search customers...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"text-input\"\n        />\n        <div className=\"customer-list\">\n          {filteredCustomers.map((customer) => (\n            <div\n              key={customer.id}\n              onClick={() => handleCustomerToggle(customer.id)}\n              className={`customer-item ${selectedCustomerIds.includes(customer.id) ? 'selected' : ''}`}\n            >\n              <strong>{customer.name}</strong>\n              <br />\n              <small>{customer.address}</small>\n            </div>\n          ))}\n          {filteredCustomers.length === 0 && (\n            <p>No customers match your search criteria.</p>\n          )}\n        </div>\n      </div>\n      \n      {/* Truck & Product Details */}\n      <div className=\"input-group\">\n        <h2>Truck & Product Details</h2>\n        <div className=\"detail-group\">\n          <label>\n            Number of Trucks Needed:\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={numTrucks}\n              onChange={(e) => setNumTrucks(Number(e.target.value))}\n              className=\"number-input\"\n            />\n          </label>\n        </div>\n        <div className=\"detail-group\">\n          <label>\n            Product Weight (kg):\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={productWeight}\n              onChange={(e) => setProductWeight(Number(e.target.value))}\n              className=\"number-input\"\n            />\n          </label>\n        </div>\n      </div>\n      \n      {/* Submit Button */}\n      <button onClick={handleSubmit} className=\"submit-button\">\n        Submit for Optimized Route\n      </button>\n      \n      {/* Display the Optimization Result and Map if available */}\n      {optimizationResult && (\n        <div className=\"result-container\">\n          <h2>Optimization Result</h2>\n          <pre className=\"result-output\">\n            {JSON.stringify(optimizationResult, null, 2)}\n          </pre>\n          {optimizationResult.routes &&\n            optimizationResult.routes.length > 0 &&\n            // Assuming the first route contains the route coordinates.\n            optimizationResult.routes[0].route && (\n              <div className=\"map-container\">\n                <h3>Optimized Route on Map</h3>\n                <MapDisplay routeData={optimizationResult.routes[0].route} />\n              </div>\n            )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DeliveryOptimizerSinglePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}