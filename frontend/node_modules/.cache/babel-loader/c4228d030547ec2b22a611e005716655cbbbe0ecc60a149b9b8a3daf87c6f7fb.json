{"ast":null,"code":"var _jsxFileName = \"/Users/hanle/PhatThinhVina/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/DeliveryOptimizerSinglePage.js\nimport React, { useState, useEffect } from 'react';\nimport MapDisplay from './MapDisplay';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeliveryOptimizerSinglePage() {\n  _s();\n  var _storages$find;\n  // State for daily customer count.\n  const [dailyCustomerCount, setDailyCustomerCount] = useState(0);\n\n  // Customer-related state.\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Truck & product details.\n  const [numTrucks, setNumTrucks] = useState(0);\n  const [productWeight, setProductWeight] = useState(0);\n\n  // Storage options and selected storage.\n  const [storages, setStorages] = useState([]);\n  const [selectedStorageId, setSelectedStorageId] = useState(null);\n\n  // Optimization result.\n  const [optimizationResult, setOptimizationResult] = useState(null);\n\n  // Fetch customers from backend database.\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/customers\").then(response => response.json()).then(data => {\n      // Assuming your API returns { \"customers\": [ ... ] }\n      setCustomers(data.customers);\n    }).catch(err => console.error(\"Error fetching customers:\", err));\n  }, []);\n\n  // Fetch storages from backend database.\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/storages\").then(response => response.json()).then(data => {\n      // Assuming your API returns { \"storages\": [ ... ] }\n      setStorages(data.storages);\n      // Set default storage if available.\n      if (data.storages && data.storages.length > 0) {\n        setSelectedStorageId(data.storages[0].id);\n      }\n    }).catch(err => console.error(\"Error fetching storages:\", err));\n  }, []);\n\n  // Toggle customer selection.\n  const handleCustomerToggle = customerId => {\n    setSelectedCustomerIds(prevSelected => prevSelected.includes(customerId) ? prevSelected.filter(id => id !== customerId) : [...prevSelected, customerId]);\n  };\n\n  // Filter customers based on search.\n  const filteredCustomers = customers.filter(customer => customer.name.toLowerCase().includes(searchTerm.toLowerCase()) || customer.address.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Handler to submit the form.\n  const handleSubmit = async () => {\n    // Filter selected customers from database-sourced list.\n    const selectedCustomers = customers.filter(c => selectedCustomerIds.includes(c.id));\n    // Map each customer to its location (assuming each customer has a 'location' property \n    // that is an array like [lat, lng])\n    const customerLocations = selectedCustomers.map(c => c.location);\n    const selectedStorage = storages.find(s => s.id === selectedStorageId);\n    const payload = {\n      locations: customerLocations,\n      // Customer coordinates.\n      num_vehicles: numTrucks,\n      // Number of trucks.\n      depot: selectedStorage ? selectedStorage.location : null,\n      // Depot (storage) coordinates.\n      storage_address: selectedStorage ? selectedStorage.address : '',\n      daily_customers: dailyCustomerCount,\n      total_weight: productWeight\n    };\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/optimize\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const jsonData = await response.json();\n      setOptimizationResult(jsonData);\n    } catch (error) {\n      console.error(\"Error optimizing routes:\", error);\n    }\n  };\n\n  // Determine the routeData for the MapDisplay.\n  const routeData = optimizationResult && optimizationResult.routes && optimizationResult.routes.length > 0 && optimizationResult.routes[0].route ? optimizationResult.routes[0].route : [];\n\n  // Determine default map center from selected storage.\n  const defaultCenter = ((_storages$find = storages.find(s => s.id === selectedStorageId)) === null || _storages$find === void 0 ? void 0 : _storages$find.location) || [0, 0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Delivery Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Daily Customer Count:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          value: dailyCustomerCount,\n          onChange: e => setDailyCustomerCount(Number(e.target.value)),\n          className: \"number-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStorageId || '',\n        onChange: e => setSelectedStorageId(Number(e.target.value)),\n        className: \"select-input\",\n        children: storages.map(storage => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: storage.id,\n          children: [storage.name, \" - \", storage.address]\n        }, storage.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Customers for Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search customers...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customer-list\",\n        children: [filteredCustomers.map(customer => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCustomerToggle(customer.id),\n          className: `customer-item ${selectedCustomerIds.includes(customer.id) ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)), filteredCustomers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No customers match your search criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Truck & Product Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number of Trucks Needed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: numTrucks,\n            onChange: e => setNumTrucks(Number(e.target.value)),\n            className: \"number-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Product Weight (kg):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0\",\n            value: productWeight,\n            onChange: e => setProductWeight(Number(e.target.value)),\n            className: \"number-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"Submit for Optimized Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed-map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapDisplay, {\n        routeData: routeData,\n        defaultCenter: defaultCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), optimizationResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Optimization Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"result-output\",\n        children: JSON.stringify(optimizationResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(DeliveryOptimizerSinglePage, \"AqNCazO0/S+1/7hpX9Gz8JhBqSw=\");\n_c = DeliveryOptimizerSinglePage;\nexport default DeliveryOptimizerSinglePage;\nvar _c;\n$RefreshReg$(_c, \"DeliveryOptimizerSinglePage\");","map":{"version":3,"names":["React","useState","useEffect","MapDisplay","jsxDEV","_jsxDEV","DeliveryOptimizerSinglePage","_s","_storages$find","dailyCustomerCount","setDailyCustomerCount","customers","setCustomers","selectedCustomerIds","setSelectedCustomerIds","searchTerm","setSearchTerm","numTrucks","setNumTrucks","productWeight","setProductWeight","storages","setStorages","selectedStorageId","setSelectedStorageId","optimizationResult","setOptimizationResult","fetch","then","response","json","data","catch","err","console","error","length","id","handleCustomerToggle","customerId","prevSelected","includes","filter","filteredCustomers","customer","name","toLowerCase","address","handleSubmit","selectedCustomers","c","customerLocations","map","location","selectedStorage","find","s","payload","locations","num_vehicles","depot","storage_address","daily_customers","total_weight","method","headers","body","JSON","stringify","jsonData","routeData","routes","route","defaultCenter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","value","onChange","e","Number","target","storage","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hanle/PhatThinhVina/frontend/src/App.js"],"sourcesContent":["// src/DeliveryOptimizerSinglePage.js\nimport React, { useState, useEffect } from 'react';\nimport MapDisplay from './MapDisplay';\nimport './App.css';\n\nfunction DeliveryOptimizerSinglePage() {\n  // State for daily customer count.\n  const [dailyCustomerCount, setDailyCustomerCount] = useState(0);\n\n  // Customer-related state.\n  const [customers, setCustomers] = useState([]);\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Truck & product details.\n  const [numTrucks, setNumTrucks] = useState(0);\n  const [productWeight, setProductWeight] = useState(0);\n\n  // Storage options and selected storage.\n  const [storages, setStorages] = useState([]);\n  const [selectedStorageId, setSelectedStorageId] = useState(null);\n\n  // Optimization result.\n  const [optimizationResult, setOptimizationResult] = useState(null);\n\n  // Fetch customers from backend database.\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/customers\")\n      .then(response => response.json())\n      .then(data => {\n        // Assuming your API returns { \"customers\": [ ... ] }\n        setCustomers(data.customers);\n      })\n      .catch(err => console.error(\"Error fetching customers:\", err));\n  }, []);\n\n  // Fetch storages from backend database.\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/storages\")\n      .then(response => response.json())\n      .then(data => {\n        // Assuming your API returns { \"storages\": [ ... ] }\n        setStorages(data.storages);\n        // Set default storage if available.\n        if(data.storages && data.storages.length > 0) {\n          setSelectedStorageId(data.storages[0].id);\n        }\n      })\n      .catch(err => console.error(\"Error fetching storages:\", err));\n  }, []);\n\n  // Toggle customer selection.\n  const handleCustomerToggle = (customerId) => {\n    setSelectedCustomerIds((prevSelected) =>\n      prevSelected.includes(customerId)\n        ? prevSelected.filter((id) => id !== customerId)\n        : [...prevSelected, customerId]\n    );\n  };\n\n  // Filter customers based on search.\n  const filteredCustomers = customers.filter(\n    (customer) =>\n      customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      customer.address.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Handler to submit the form.\n  const handleSubmit = async () => {\n    // Filter selected customers from database-sourced list.\n    const selectedCustomers = customers.filter((c) =>\n      selectedCustomerIds.includes(c.id)\n    );\n    // Map each customer to its location (assuming each customer has a 'location' property \n    // that is an array like [lat, lng])\n    const customerLocations = selectedCustomers.map((c) => c.location);\n    const selectedStorage = storages.find(s => s.id === selectedStorageId);\n\n    const payload = {\n      locations: customerLocations,                   // Customer coordinates.\n      num_vehicles: numTrucks,                         // Number of trucks.\n      depot: selectedStorage ? selectedStorage.location : null,  // Depot (storage) coordinates.\n      storage_address: selectedStorage ? selectedStorage.address : '',\n      daily_customers: dailyCustomerCount,\n      total_weight: productWeight,\n    };\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/optimize\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n      const jsonData = await response.json();\n      setOptimizationResult(jsonData);\n    } catch (error) {\n      console.error(\"Error optimizing routes:\", error);\n    }\n  };\n\n  // Determine the routeData for the MapDisplay.\n  const routeData = optimizationResult &&\n    optimizationResult.routes &&\n    optimizationResult.routes.length > 0 &&\n    optimizationResult.routes[0].route\n      ? optimizationResult.routes[0].route\n      : [];\n\n  // Determine default map center from selected storage.\n  const defaultCenter = storages.find(s => s.id === selectedStorageId)?.location || [0, 0];\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Delivery Optimizer</h1>\n      \n      {/* Form Inputs */}\n      <div className=\"input-group\">\n        <label>\n          <strong>Daily Customer Count:</strong>\n          <input\n            type=\"number\"\n            min=\"0\"\n            value={dailyCustomerCount}\n            onChange={(e) => setDailyCustomerCount(Number(e.target.value))}\n            className=\"number-input\"\n          />\n        </label>\n      </div>\n      \n      <div className=\"input-group\">\n        <h2>Select Storage</h2>\n        <select\n          value={selectedStorageId || ''}\n          onChange={(e) => setSelectedStorageId(Number(e.target.value))}\n          className=\"select-input\"\n        >\n          {storages.map(storage => (\n            <option key={storage.id} value={storage.id}>\n              {storage.name} - {storage.address}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <div className=\"input-group\">\n        <h2>Select Customers for Delivery</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search customers...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"text-input\"\n        />\n        <div className=\"customer-list\">\n          {filteredCustomers.map((customer) => (\n            <div\n              key={customer.id}\n              onClick={() => handleCustomerToggle(customer.id)}\n              className={`customer-item ${selectedCustomerIds.includes(customer.id) ? 'selected' : ''}`}\n            >\n              <strong>{customer.name}</strong>\n              <br />\n              <small>{customer.address}</small>\n            </div>\n          ))}\n          {filteredCustomers.length === 0 && (\n            <p>No customers match your search criteria.</p>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"input-group\">\n        <h2>Truck & Product Details</h2>\n        <div className=\"detail-group\">\n          <label>\n            Number of Trucks Needed:\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={numTrucks}\n              onChange={(e) => setNumTrucks(Number(e.target.value))}\n              className=\"number-input\"\n            />\n          </label>\n        </div>\n        <div className=\"detail-group\">\n          <label>\n            Product Weight (kg):\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={productWeight}\n              onChange={(e) => setProductWeight(Number(e.target.value))}\n              className=\"number-input\"\n            />\n          </label>\n        </div>\n      </div>\n      \n      <button onClick={handleSubmit} className=\"submit-button\">\n        Submit for Optimized Route\n      </button>\n      \n      {/* Fixed Map Container at Bottom */}\n      <div className=\"fixed-map-container\">\n        <MapDisplay routeData={routeData} defaultCenter={defaultCenter} />\n      </div>\n      \n      {/* Optionally display the optimization result JSON above the map if desired */}\n      {optimizationResult && (\n        <div className=\"result-container\">\n          <h2>Optimization Result</h2>\n          <pre className=\"result-output\">\n            {JSON.stringify(optimizationResult, null, 2)}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DeliveryOptimizerSinglePage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,2BAA2BA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,cAAA;EACrC;EACA,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAE/D;EACA,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAErD;EACA,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAACwB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;;EAElE;EACAC,SAAS,CAAC,MAAM;IACdyB,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAnB,YAAY,CAACmB,IAAI,CAACpB,SAAS,CAAC;IAC9B,CAAC,CAAC,CACDqB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/B,SAAS,CAAC,MAAM;IACdyB,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAT,WAAW,CAACS,IAAI,CAACV,QAAQ,CAAC;MAC1B;MACA,IAAGU,IAAI,CAACV,QAAQ,IAAIU,IAAI,CAACV,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;QAC5CZ,oBAAoB,CAACO,IAAI,CAACV,QAAQ,CAAC,CAAC,CAAC,CAACgB,EAAE,CAAC;MAC3C;IACF,CAAC,CAAC,CACDL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,oBAAoB,GAAIC,UAAU,IAAK;IAC3CzB,sBAAsB,CAAE0B,YAAY,IAClCA,YAAY,CAACC,QAAQ,CAACF,UAAU,CAAC,GAC7BC,YAAY,CAACE,MAAM,CAAEL,EAAE,IAAKA,EAAE,KAAKE,UAAU,CAAC,GAC9C,CAAC,GAAGC,YAAY,EAAED,UAAU,CAClC,CAAC;EACH,CAAC;;EAED;EACA,MAAMI,iBAAiB,GAAGhC,SAAS,CAAC+B,MAAM,CACvCE,QAAQ,IACPA,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACL,QAAQ,CAAC1B,UAAU,CAAC+B,WAAW,CAAC,CAAC,CAAC,IAC9DF,QAAQ,CAACG,OAAO,CAACD,WAAW,CAAC,CAAC,CAACL,QAAQ,CAAC1B,UAAU,CAAC+B,WAAW,CAAC,CAAC,CACpE,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,iBAAiB,GAAGtC,SAAS,CAAC+B,MAAM,CAAEQ,CAAC,IAC3CrC,mBAAmB,CAAC4B,QAAQ,CAACS,CAAC,CAACb,EAAE,CACnC,CAAC;IACD;IACA;IACA,MAAMc,iBAAiB,GAAGF,iBAAiB,CAACG,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,CAAC;IAClE,MAAMC,eAAe,GAAGjC,QAAQ,CAACkC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnB,EAAE,KAAKd,iBAAiB,CAAC;IAEtE,MAAMkC,OAAO,GAAG;MACdC,SAAS,EAAEP,iBAAiB;MAAoB;MAChDQ,YAAY,EAAE1C,SAAS;MAA0B;MACjD2C,KAAK,EAAEN,eAAe,GAAGA,eAAe,CAACD,QAAQ,GAAG,IAAI;MAAG;MAC3DQ,eAAe,EAAEP,eAAe,GAAGA,eAAe,CAACP,OAAO,GAAG,EAAE;MAC/De,eAAe,EAAErD,kBAAkB;MACnCsD,YAAY,EAAE5C;IAChB,CAAC;IAED,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMF,KAAK,CAAC,gCAAgC,EAAE;QAC7DqC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,OAAO;MAC9B,CAAC,CAAC;MACF,MAAMY,QAAQ,GAAG,MAAMxC,QAAQ,CAACC,IAAI,CAAC,CAAC;MACtCJ,qBAAqB,CAAC2C,QAAQ,CAAC;IACjC,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMmC,SAAS,GAAG7C,kBAAkB,IAClCA,kBAAkB,CAAC8C,MAAM,IACzB9C,kBAAkB,CAAC8C,MAAM,CAACnC,MAAM,GAAG,CAAC,IACpCX,kBAAkB,CAAC8C,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,GAC9B/C,kBAAkB,CAAC8C,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,GAClC,EAAE;;EAER;EACA,MAAMC,aAAa,GAAG,EAAAjE,cAAA,GAAAa,QAAQ,CAACkC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnB,EAAE,KAAKd,iBAAiB,CAAC,cAAAf,cAAA,uBAA9CA,cAAA,CAAgD6C,QAAQ,KAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAExF,oBACEhD,OAAA;IAAKqE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtE,OAAA;MAAIqE,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG7C1E,OAAA;MAAKqE,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BtE,OAAA;QAAAsE,QAAA,gBACEtE,OAAA;UAAAsE,QAAA,EAAQ;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtC1E,OAAA;UACE2E,IAAI,EAAC,QAAQ;UACbC,GAAG,EAAC,GAAG;UACPC,KAAK,EAAEzE,kBAAmB;UAC1B0E,QAAQ,EAAGC,CAAC,IAAK1E,qBAAqB,CAAC2E,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;UAC/DR,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN1E,OAAA;MAAKqE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BtE,OAAA;QAAAsE,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB1E,OAAA;QACE6E,KAAK,EAAE3D,iBAAiB,IAAI,EAAG;QAC/B4D,QAAQ,EAAGC,CAAC,IAAK5D,oBAAoB,CAAC6D,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;QAC9DR,SAAS,EAAC,cAAc;QAAAC,QAAA,EAEvBtD,QAAQ,CAAC+B,GAAG,CAACmC,OAAO,iBACnBlF,OAAA;UAAyB6E,KAAK,EAAEK,OAAO,CAAClD,EAAG;UAAAsC,QAAA,GACxCY,OAAO,CAAC1C,IAAI,EAAC,KAAG,EAAC0C,OAAO,CAACxC,OAAO;QAAA,GADtBwC,OAAO,CAAClD,EAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1E,OAAA;MAAKqE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BtE,OAAA;QAAAsE,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC1E,OAAA;QACE2E,IAAI,EAAC,MAAM;QACXQ,WAAW,EAAC,qBAAqB;QACjCN,KAAK,EAAEnE,UAAW;QAClBoE,QAAQ,EAAGC,CAAC,IAAKpE,aAAa,CAACoE,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;QAC/CR,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF1E,OAAA;QAAKqE,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3BhC,iBAAiB,CAACS,GAAG,CAAER,QAAQ,iBAC9BvC,OAAA;UAEEoF,OAAO,EAAEA,CAAA,KAAMnD,oBAAoB,CAACM,QAAQ,CAACP,EAAE,CAAE;UACjDqC,SAAS,EAAE,iBAAiB7D,mBAAmB,CAAC4B,QAAQ,CAACG,QAAQ,CAACP,EAAE,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;UAAAsC,QAAA,gBAE1FtE,OAAA;YAAAsE,QAAA,EAAS/B,QAAQ,CAACC;UAAI;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAChC1E,OAAA;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN1E,OAAA;YAAAsE,QAAA,EAAQ/B,QAAQ,CAACG;UAAO;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAN5BnC,QAAQ,CAACP,EAAE;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACN,CAAC,EACDpC,iBAAiB,CAACP,MAAM,KAAK,CAAC,iBAC7B/B,OAAA;UAAAsE,QAAA,EAAG;QAAwC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC/C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN1E,OAAA;MAAKqE,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BtE,OAAA;QAAAsE,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC1E,OAAA;QAAKqE,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BtE,OAAA;UAAAsE,QAAA,GAAO,0BAEL,eAAAtE,OAAA;YACE2E,IAAI,EAAC,QAAQ;YACbC,GAAG,EAAC,GAAG;YACPC,KAAK,EAAEjE,SAAU;YACjBkE,QAAQ,EAAGC,CAAC,IAAKlE,YAAY,CAACmE,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;YACtDR,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BtE,OAAA;UAAAsE,QAAA,GAAO,sBAEL,eAAAtE,OAAA;YACE2E,IAAI,EAAC,QAAQ;YACbC,GAAG,EAAC,GAAG;YACPC,KAAK,EAAE/D,aAAc;YACrBgE,QAAQ,EAAGC,CAAC,IAAKhE,gBAAgB,CAACiE,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;YAC1DR,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN1E,OAAA;MAAQoF,OAAO,EAAEzC,YAAa;MAAC0B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGT1E,OAAA;MAAKqE,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCtE,OAAA,CAACF,UAAU;QAACmE,SAAS,EAAEA,SAAU;QAACG,aAAa,EAAEA;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,EAGLtD,kBAAkB,iBACjBpB,OAAA;MAAKqE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtE,OAAA;QAAAsE,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5B1E,OAAA;QAAKqE,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BR,IAAI,CAACC,SAAS,CAAC3C,kBAAkB,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxE,EAAA,CAtNQD,2BAA2B;AAAAoF,EAAA,GAA3BpF,2BAA2B;AAwNpC,eAAeA,2BAA2B;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}